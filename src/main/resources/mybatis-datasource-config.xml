<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<context:property-placeholder ignore-unresolvable="true" location="classpath:application.properties" />

	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
		<property name="driverClassName" value="${spring.datasource.driverClassName}" />
		<property name="url" value="${spring.datasource.url}" />
		<property name="username" value="${spring.datasource.username}" />
		<property name="password" value="${spring.datasource.password}" />
		<property name="testWhileIdle" value="${spring.datasource.test-while-idle}" />
		<property name="testOnBorrow" value="${spring.datasource.test-on-borrow}" />
		<property name="validationQuery" value="${spring.datasource.validation-query}" />
		<property name="timeBetweenEvictionRunsMillis" value="${spring.datasource.time-between-eviction-runs-millis}" />
		<property name="maxWait" value="${spring.datasource.max-wait}" />
		<property name="removeAbandonedTimeout" value="${spring.datasource.remove-abandoned-timeout}" />
		<property name="minEvictableIdleTimeMillis" value="${spring.datasource.min-evictable-idle-time-millis}" />
		<property name="removeAbandoned" value="${spring.datasource.remove-abandoned}" />
		<property name="maxActive" value="${spring.datasource.max-active}" />
		<property name="maxIdle" value="${spring.datasource.max-idle}" />
		<property name="minIdle" value="${spring.datasource.min-idle}" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</bean>

	<!-- 配置扫描Mapper接口的包路径 -->
	<!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
	<!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
	<!--<property name="basePackage" value="com.xixicat.repository.mapper"/>-->
	<!--</bean>-->

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>

	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		  p:dataSource-ref="dataSource"/>
	<aop:aspectj-autoproxy expose-proxy="true" proxy-target-class="true" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager" >
		<tx:attributes>
			<tx:method name="start*" propagation="REQUIRED"/>
			<tx:method name="submit*" propagation="REQUIRED"/>
			<tx:method name="clear*" propagation="REQUIRED"/>
			<tx:method name="create*" propagation="REQUIRED"/>
			<tx:method name="activate*" propagation="REQUIRED"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="insert*" propagation="REQUIRED"/>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="remove*" propagation="REQUIRED"/>
			<tx:method name="execute*" propagation="REQUIRED"/>
			<tx:method name="del*" propagation="REQUIRED"/>
			<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="true" expose-proxy="true">
		<aop:pointcut id="pt" expression="execution(public * com.sharingplatform.*.*(..))" />
		<aop:advisor order="200" pointcut-ref="pt" advice-ref="txAdvice"/>
	</aop:config>
</beans>